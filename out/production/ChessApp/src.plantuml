@startuml

title __SRC's Class Diagram__\n

  namespace a {
    class Bishop {
        + Bishop()
        + canMoveTo()
        + checkIfBlocked()
        + getType()
    }
  }
  

  namespace a {
    class Chess {
        ~ display : ChessDisplay
        ~ frame : ChessFrame
        ~ isBlack : boolean
        ~ isPiece : boolean
        ~ isWhite : boolean
        ~ lastPieceClicked : ChessPiece
        + init()
        + initBooleans()
        + mouseListenersAdded()
        + mousePressed()
        + run()
    }
  }
  

  namespace  a {
    class ChessBoard {
        {static} + BOARD_SIZE : int
        + chessPieces : ChessPiece[][]
        + ChessBoard()
        + addPiece()
        + pieceAt()
        + removePiece()
    }
  }
  

  namespace a {
    class King {
        + King()
        + canMoveTo()
        + getType()
    }
  }
  

  namespace a {
    class Knight {
        + Knight()
        + canMoveTo()
        + getType()
    }
  }
  

  namespace a {
    class Pawn {
        ~ firstMove : boolean
        + Pawn()
        + canMoveTo()
        + getType()
        - isCanMove()
    }
  }
  

  namespace a {
    enum PieceType {
      BISHOP
      KING
      KNIGHT
      PAWN
      QUEEN
      ROOK
    }
  }
  

  namespace a {
    class Queen {
        + Queen()
        + canMoveTo()
        + checkIfBlocked()
        + getType()
    }
  }
  

  namespace a {
    class Rook {
        + Rook()
        + canMoveTo()
        + checkIfBlocked()
        + getType()
    }
  }
  

  Bishop -up-|> ChessPiece
  Chess -up-|> GraphicsProgram
  Chess o-- ChessBoard : board
  ChessBoard -up-|> DrawableObject
  King -up-|> ChessPiece
  Knight -up-|> ChessPiece
  Pawn -up-|> ChessPiece
  Queen -up-|> ChessPiece
  Rook -up-|> ChessPiece


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
